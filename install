#!/bin/bash

set -e

if [ ! -f "$(pwd)/install" ]; then
  echo "Please run from $(dirname "$0") directory."
  exit 1
fi

ZDOTDIR="${ZDOTDIR:-$HOME}"
ANTIGEN_PATH="$HOME/.local/share/antigen"
OH_MY_POSH_PATH="$HOME/.local/share/oh-my-posh"

mkdir -p $ANTIGEN_PATH
mkdir -p $OH_MY_POSH_PATH

zsh_shell_check() {
  if ! command -v zsh >/dev/null 2>&1; then
    echo "Error: zsh is not installed."
    return
  fi

  if [ ! "$(basename "$SHELL")" = "zsh" ]; then
    echo "Error: zsh is not the default shell."
    return
  fi

  echo "Ok: zsh is configured correctly."
}

zsh_antigen_check() {
  if [ ! -f "$ANTIGEN_PATH/antigen.zsh" ]; then
    echo "Error: antigen.zsh is not found in $$ANTIGEN_PATH: $ANTIGEN_PATH"
    return
  fi

  echo "Ok: antigen.zsh is found in $ANTIGEN_PATH."
}

create_file_symlink() {
  if [ -e "$2" ] && [ -L "$2" ] && [ "$(realpath "$2")" = "$1" ]
  then
    echo "Ok: symbolic link $2 is already exist and correct."
    return
  fi

  if [ -e "$2" ] && [ ! -L "$2" ]; then
    echo "Warning: target $2 is not a symbolic link, renaming the target..."
    mv "$2" "$2_before"
  fi

  if [ -L "$2" ] && [ ! "$(realpath "$2")" = "$1" ]; then
    echo "Warning: symbolic link $2 is incorrect: $(realpath "$2")"
  fi

  ln -sfr "$1" "$2" && echo "Ok: symbolic link $2 is created."
}

oh_my_posh_check() {
  if ! command -v oh-my-posh >/dev/null 2>&1; then
    echo "Error: oh-my-posh is not installed."
  else
    echo "Ok: oh-my-posh is already installed."
  fi

  create_file_symlink "$(pwd)/oh-my-posh/theme.omp.json" "$OH_MY_POSH_PATH/theme.omp.json"
}

zsh_startup_check() {
  create_file_symlink "$(pwd)/zsh/.zshenv" "$ZDOTDIR/.zshenv"
  create_file_symlink "$(pwd)/zsh/.zshrc" "$ZDOTDIR/.zshrc"
}

zsh_check() {
  zsh_shell_check
  zsh_antigen_check
  zsh_startup_check
}

nvim_check() {
  if ! command -v nvim >/dev/null 2>&1; then
    echo "Error: neovim is not installed."
  else
    echo "Ok: neovim is already installed."
  fi

  create_file_symlink "$(pwd)/nvim" "$HOME/.config/nvim"

  echo "Note: remember to sync the plugins for neovim."
}

tmux_check() {
  if ! command -v tmux >/dev/null 2>&1; then
    echo "Error: tmux is not installed."
  else
    echo "Ok: tmux is already installed."
  fi

  if [ ! -e "$HOME/.tmux/plugins/tpm" ]; then
    echo "Error: tmux plugin manager is not installed."
  else
    echo "OK: tmux plugin manager is already installed."
  fi

  create_file_symlink "$(pwd)/tmux/.tmux.conf" "$HOME/.tmux.conf"

  echo "Note: remember to source $HOME/.tmux.conf and install the plugins through TPM."
}

zsh_check
oh_my_posh_check
nvim_check
tmux_check

